(()=>{"use strict";var e={299:(e,t,n)=>{n.d(t,{Z:()=>l});var o=n(15),r=n.n(o),i=n(645),a=n.n(i)()(r());a.push([e.id,".main{min-height:calc(100vh - 49.6px)}.nodec:hover{text-decoration:none}a:hover h5:hover{background-color:#378061;border-radius:10px;padding:3px 0;text-decoration:none}.strikethrough{text-decoration:line-through;text-shadow:0 0 8px #444}","",{version:3,sources:["webpack://./src/stylesheet.scss"],names:[],mappings:"AAEA,MACE,+BAAA,CAGF,aACE,oBAAA,CAGF,iBACE,wBAAA,CAGA,kBAAA,CACA,aAAA,CACA,oBAAA,CAGF,eACE,4BAAA,CACA,wBAAA",sourcesContent:['// @import "bootstrap";\n\n.main {\n  min-height: calc(100vh - 49.6px);\n}\n\n.nodec:hover {\n  text-decoration: none;\n}\n\na:hover h5:hover {\n  background-color: rgb(55, 128, 97);\n\n  /* cursor: pointer; */\n  border-radius: 10px;\n  padding: 3px 0;\n  text-decoration: none;\n}\n\n.strikethrough {\n  text-decoration: line-through;\n  text-shadow: 0 0 8px #444;\n}\n'],sourceRoot:""}]);const l=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,o){"string"==typeof e&&(e=[[null,e,""]]);var r={};if(o)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(r[a]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);o&&r[s[0]]||(n&&(s[2]?s[2]="".concat(n," and ").concat(s[2]):s[2]=n),t.push(s))}},t}},15:e=>{function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}e.exports=function(e){var n,o,r=(o=4,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){var n=e&&("undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"]);if(null!=n){var o,r,i=[],a=!0,l=!1;try{for(n=n.call(e);!(a=(o=n.next()).done)&&(i.push(o.value),!t||i.length!==t);a=!0);}catch(e){l=!0,r=e}finally{try{a||null==n.return||n.return()}finally{if(l)throw r}}return i}}(n,o)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var o=Object.prototype.toString.call(e).slice(8,-1);return"Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o?Array.from(e):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?t(e,n):void 0}}(n,o)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=r[1],a=r[3];if("function"==typeof btoa){var l=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),c="/*# ".concat(s," */"),d=a.sources.map((function(e){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(e," */")}));return[i].concat(d).concat([c]).join("\n")}return[i].join("\n")}},379:(e,t,n)=>{var o,r=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),i=[];function a(e){for(var t=-1,n=0;n<i.length;n++)if(i[n].identifier===e){t=n;break}return t}function l(e,t){for(var n={},o=[],r=0;r<e.length;r++){var l=e[r],s=t.base?l[0]+t.base:l[0],c=n[s]||0,d="".concat(s," ").concat(c);n[s]=c+1;var u=a(d),m={css:l[1],media:l[2],sourceMap:l[3]};-1!==u?(i[u].references++,i[u].updater(m)):i.push({identifier:d,updater:h(m,t),references:1}),o.push(d)}return o}function s(e){var t=document.createElement("style"),o=e.attributes||{};if(void 0===o.nonce){var i=n.nc;i&&(o.nonce=i)}if(Object.keys(o).forEach((function(e){t.setAttribute(e,o[e])})),"function"==typeof e.insert)e.insert(t);else{var a=r(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var c,d=(c=[],function(e,t){return c[e]=t,c.filter(Boolean).join("\n")});function u(e,t,n,o){var r=n?"":o.media?"@media ".concat(o.media," {").concat(o.css,"}"):o.css;if(e.styleSheet)e.styleSheet.cssText=d(t,r);else{var i=document.createTextNode(r),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}function m(e,t,n){var o=n.css,r=n.media,i=n.sourceMap;if(r?e.setAttribute("media",r):e.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=o;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(o))}}var p=null,f=0;function h(e,t){var n,o,r;if(t.singleton){var i=f++;n=p||(p=s(t)),o=u.bind(null,n,i,!1),r=u.bind(null,n,i,!0)}else n=s(t),o=m.bind(null,n,t),r=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return o(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;o(e=t)}else r()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===o&&(o=Boolean(window&&document&&document.all&&!window.atob)),o));var n=l(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var o=0;o<n.length;o++){var r=a(n[o]);i[r].references--}for(var s=l(e,t),c=0;c<n.length;c++){var d=a(n[c]);0===i[d].references&&(i[d].updater(),i.splice(d,1))}n=s}}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e={};n.r(e),n.d(e,{dateedit:()=>T,dom:()=>q,listoflist1:()=>k,readRadios1edit:()=>w,taskedit:()=>M});var t=n(379),o=n.n(t),r=n(299);o()(r.Z,{insert:"head",singleton:!1}),r.Z.locals;const i=document.querySelector("#submitlist"),a=document.querySelector("#submittask"),l=document.querySelector("#defaultlist"),s=document.getElementById("form-display"),c=document.getElementById("list"),d=document.querySelectorAll(".radiobtn"),u=document.querySelector("#task"),m=document.querySelector("#date"),p=document.querySelector("#edittask");function f(){let e=[];return localStorage.getItem("liststore")&&(e=JSON.parse(localStorage.liststore)),e}function h(e,t,n){n[e].todos.splice(t,1),localStorage.setItem("liststore",JSON.stringify(n))}function g(e,t,n){e[t].todos[n].status=!1,localStorage.setItem("liststore",JSON.stringify(e))}function v(e,t,n){e[t].todos[n].status=!0,localStorage.setItem("liststore",JSON.stringify(e))}const b=document.querySelector("#form-btn"),y=document.querySelector("#form-display"),S=document.querySelector("#task-btn"),E=document.querySelector("#list-display"),A=document.querySelector("#refresh-btn"),k=document.querySelectorAll(".listoflist"),C=document.getElementById("currentclassname"),L=document.getElementById("defaultlist"),I=document.getElementById("tommorrowlist"),x=document.getElementById("todaylist"),w=document.querySelectorAll(".radiobtnedit"),M=document.getElementById("taskedit"),T=document.getElementById("dateedit"),B=document.getElementById("canceledittask"),O=document.getElementById("cancellist"),j=document.getElementById("editingform"),H=document.getElementById("cancelcreatetask"),N=document.getElementById("form-display");function q(){function e(e){let t=e.target.previousSibling.id;t=t.slice(-1);const n=f();if(n.splice(t,1),localStorage.setItem("liststore",JSON.stringify(n)),e.target.parentElement.remove(),localStorage.getItem("selectedlist")===e.target.previousSibling.innerHTML.trim())for(localStorage.removeItem("selectedlist");C.lastElementChild;)C.removeChild(C.lastChild)}function t(e){const t=f(),n=localStorage.getItem("selectedlist");for(let o=0;o<t.length;o+=1)if(t[o].list===n){let n=e.target.parentElement.parentElement.id;n=n.slice(-1),h(o,n,t);break}e.target.parentElement.parentElement.remove()}function n(e){if(j.classList.contains("d-none")){const t=e.target.parentElement.parentElement.id.slice(-1);localStorage.setItem("selectedtask",t),j.classList.remove("d-none");for(let t=0;t<3;t+=1)if(w[t].value===e.target.parentElement.previousSibling.innerHTML){w[t].checked=!0;break}M.value=e.target.parentElement.previousSibling.previousSibling.previousSibling.innerHTML,T.value=e.target.parentElement.previousSibling.previousSibling.innerHTML}else j.classList.add("d-none"),localStorage.removeItem("selectedtask")}function o(e){const t=f(),n=e.target.parentElement.parentElement,o=n.id.slice(-1),r=localStorage.getItem("selectedlist");if(e.target.checked){n.classList.add("strikethrough");for(let e=0;e<t.length;e+=1)if(t[e].list===r){v(t,e,o);break}}else{n.classList.remove("strikethrough");for(let e=0;e<t.length;e+=1)if(t[e].list===r){g(t,e,o);break}}}function r(e,r,i,a,l=1){const s=document.createElement("tr");s.setAttribute("id",`task${i}`),s.setAttribute("class","text-center");const c=e[r].todos[i],d=document.createElement("th");if(1===l){s.appendChild(d);const e=document.createElement("input");e.addEventListener("click",o),d.appendChild(e),e.setAttribute("scope","row"),e.setAttribute("type","checkbox"),e.setAttribute("class","form-check-input taskdone"),c.status&&(e.checked=!0)}const u=document.createElement("td");s.appendChild(u),u.innerHTML=c.task;const m=document.createElement("td");s.appendChild(m),m.innerHTML=c.date;const p=document.createElement("td");if(p.innerHTML=c.priority,s.appendChild(p),1===l){const e=document.createElement("td");s.appendChild(e);const o=document.createElement("button");o.addEventListener("click",n),e.appendChild(o),o.setAttribute("class","btn btn-primary edittask"),o.innerHTML="Edit";const r=document.createElement("td");s.appendChild(r);const i=document.createElement("button");i.addEventListener("click",t),r.appendChild(i),i.setAttribute("class","btn btn-danger deltask"),i.innerHTML="Delete",c.status&&s.classList.add("strikethrough")}a.appendChild(s)}function i(){if(localStorage.getItem("selectedlist")){for(;C.lastElementChild;)C.removeChild(C.lastChild);const e=document.createElement("h4");C.appendChild(e),e.setAttribute("class","text-center text-dark mb-4"),e.innerHTML=localStorage.selectedlist,function(e){b.classList.remove("d-none");const t=f();for(let n=0;n<t.length;n+=1)if(t[n].list===e){const e=document.createElement("table");C.appendChild(e),e.setAttribute("class","table table-stripped text-dark container pt-5");const o=document.createElement("thead"),i=document.createElement("tr");o.setAttribute("class","text-center"),i.innerHTML='  <th scope="column">Status</th>\n                    <th>Task</th>\n                    <th>Date</th>\n                    <th>Priority</th> \n                    <th>Update</th>\n                    <th>Remove</th>',o.appendChild(i),e.appendChild(o);const a=document.createElement("tbody");e.appendChild(a);for(let e=0;e<t[n].todos.length;e+=1)r(t,n,e,a)}}(localStorage.getItem("selectedlist"))}}function a(e){const t=e.target.textContent.trim();localStorage.setItem("selectedlist",t),i()}function l(e){for(b.classList.add("d-none");C.lastElementChild;)C.removeChild(C.lastChild);const t=document.createElement("h4");C.appendChild(t),t.setAttribute("class","text-center text-dark mb-4"),t.innerHTML=e.target.textContent.trim(),localStorage.removeItem("selectedlist"),function(e){const t=f(),n=document.createElement("table");C.appendChild(n),n.setAttribute("class","table table-stripped text-dark container pt-5");const o=document.createElement("thead");n.appendChild(o);const i=document.createElement("tr");o.setAttribute("class","text-center"),o.appendChild(i),i.innerHTML='  <th scope="column">Task</th>\n                    <th>Date</th>\n                    <th>Priority</th> \n            ';const a=document.createElement("tbody");n.appendChild(a);for(let n=0;n<t.length;n+=1)for(let o=0;o<t[n].todos.length;o+=1){const i=t[n].todos[o].date,{status:l}=t[n].todos[o],s=new Date(i),c=(new Date-s)/864e5;("Tomorrow - [View-Only]"===e&&c<0&&c>-1.1&&!1===l||"Today - [View-Only]"===e&&c>=0&&c<=1&&!1===l)&&r(t,n,o,a,e)}}(e.target.textContent.trim())}O.addEventListener("click",(()=>{E.classList.add("d-none")})),B.addEventListener("click",(()=>{j.classList.add("d-none")})),H.addEventListener("click",(()=>{N.classList.add("d-none")})),b.addEventListener("click",(()=>{localStorage.getItem("selectedlist")?y.classList.contains("d-none")?y.classList.remove("d-none"):y.classList.add("d-none"):$("#myModal").modal("show")})),S.addEventListener("click",(()=>{E.classList.contains("d-none")?E.classList.remove("d-none"):E.classList.add("d-none")})),A.addEventListener("click",(()=>{if(localStorage.getItem("selectedlist"))for(localStorage.removeItem("selectedlist"),localStorage.removeItem("selectedtask");C.lastElementChild;)C.removeChild(C.lastChild)})),L.addEventListener("click",a),x.addEventListener("click",l),I.addEventListener("click",l),i(),function(){if(localStorage.getItem("liststore")){const t=JSON.parse(localStorage.liststore),n=document.querySelector("#listoftodos");for(let o=1;o<t.length;o+=1){const r=document.createElement("a");r.setAttribute("href","#"),r.setAttribute("class","d-flex my-2 justify-content-center nodec");const i=document.createElement("h5");r.appendChild(i),i.addEventListener("click",a),i.setAttribute("id",`projectlist${o}`),i.setAttribute("class","text-white p-2 w-50 text-center listoflist"),i.innerHTML=`\n                     ${t[o].list} \n                  \n                    `;const l=document.createElement("button");l.addEventListener("click",e),r.appendChild(l),l.setAttribute("class","btn btn-danger  btn-sm"),l.innerHTML="Delete",n.appendChild(r)}}}()}q(),function(e){class t{constructor(e){this.list=e,this.todos=[]}}function n(e,t,n,o){this.date=e,this.task=t,this.priority=n,this.status=o}const o=[];if(!localStorage.getItem("liststore")){const e=new t(l.textContent);o.push(e),localStorage.setItem("liststore",JSON.stringify(o))}i.addEventListener("click",(e=>{const n=f(),o=new t(c.value);n.push(o),localStorage.setItem("liststore",JSON.stringify(n)),e.preventDefault(),window.location.reload()})),a.addEventListener("click",(e=>{const t=f();if(localStorage.getItem("selectedlist")){let o;for(let e=0;e<3;e+=1)if(!0===d[e].checked){o=d[e].value;break}const r=new n(m.value,u.value,o,!1);for(let e=0;e<t.length;e+=1){const n=localStorage.getItem("selectedlist");if(t[e].list===n){t[e].todos.push(r),localStorage.setItem("liststore",JSON.stringify(t));break}}e.preventDefault(),window.location.reload()}})),p.addEventListener("click",(t=>{const n=f();if(localStorage.getItem("selectedlist")){let t;for(let n=0;n<3;n+=1)if(!0===e.readRadios1edit[n].checked){t=e.readRadios1edit[n].value;break}const o=localStorage.getItem("selectedlist");for(let r=0;r<n.length;r+=1)if(n[r].list===o){const o=localStorage.getItem("selectedtask");n[r].todos[o].task=e.taskedit.value,n[r].todos[o].date=e.dateedit.value,n[r].todos[o].priority=t,localStorage.setItem("liststore",JSON.stringify(n));break}e.dom()}t.preventDefault(),window.location.reload()})),s.reset()}(e)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,